{"ast":null,"code":"var _jsxFileName = \"/home/adam-noah/app.nextnoetics/client/src/components/SaveTemplate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport { useEditor } from \"@craftjs/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SaveTemplate = () => {\n  _s();\n  const [templateName, setTemplateName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    query\n  } = useEditor();\n\n  // Use a valid UUID from your authentication table for testing\n  const user = {\n    id: process.env.NEXT_PUBLIC_UUID,\n    email: 'parkwaydrive1225@gmail.com'\n  };\n  const handleSaveTemplate = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const jsonData = query.serialize();\n      const {\n        data,\n        error\n      } = await supabase.from('templates').insert([{\n        name: templateName,\n        sections: jsonData,\n        user_id: user.id\n      }]);\n      if (error) {\n        setError(error.message);\n      } else {\n        alert('Template saved successfully!');\n      }\n    } catch (e) {\n      setError('Invalid JSON data');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-950 w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Save Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Template Name\",\n      value: templateName,\n      onChange: e => setTemplateName(e.target.value),\n      className: \"w-full p-2 border border-gray-300 rounded mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveTemplate,\n      disabled: loading,\n      className: \"bg-blue-500 text-white p-2 rounded\",\n      children: loading ? 'Saving...' : 'Save Template'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SaveTemplate, \"Dlq4diIYgtfvvLuWLp1hj4PLU/k=\", false, function () {\n  return [useEditor];\n});\n_c = SaveTemplate;\nexport default SaveTemplate;\nvar _c;\n$RefreshReg$(_c, \"SaveTemplate\");","map":{"version":3,"names":["React","useState","supabase","useEditor","jsxDEV","_jsxDEV","SaveTemplate","_s","templateName","setTemplateName","loading","setLoading","error","setError","query","user","id","process","env","NEXT_PUBLIC_UUID","email","handleSaveTemplate","jsonData","serialize","data","from","insert","name","sections","user_id","message","alert","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","disabled","style","color","_c","$RefreshReg$"],"sources":["/home/adam-noah/app.nextnoetics/client/src/components/SaveTemplate.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport { useEditor } from \"@craftjs/core\";\n\nconst SaveTemplate = () => {\n  const [templateName, setTemplateName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { query } = useEditor();\n\n  // Use a valid UUID from your authentication table for testing\n  const user = {\n    id: process.env.NEXT_PUBLIC_UUID,\n    email: 'parkwaydrive1225@gmail.com'\n  };\n\n  const handleSaveTemplate = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const jsonData = query.serialize();\n\n      const { data, error } = await supabase\n        .from('templates')\n        .insert([{ name: templateName, sections: jsonData, user_id: user.id }]);\n\n      if (error) {\n        setError(error.message);\n      } else {\n        alert('Template saved successfully!');\n      }\n    } catch (e) {\n      setError('Invalid JSON data');\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className='text-gray-950 w-full'>\n      <h2>Save Template</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Template Name\"\n        value={templateName}\n        onChange={(e) => setTemplateName(e.target.value)}\n        className=\"w-full p-2 border border-gray-300 rounded mb-2\"\n      />\n      <button onClick={handleSaveTemplate} disabled={loading} className=\"bg-blue-500 text-white p-2 rounded\">\n        {loading ? 'Saving...' : 'Save Template'}\n      </button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default SaveTemplate;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEa;EAAM,CAAC,GAAGX,SAAS,CAAC,CAAC;;EAE7B;EACA,MAAMY,IAAI,GAAG;IACXC,EAAE,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB;IAChCC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCV,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMS,QAAQ,GAAGR,KAAK,CAACS,SAAS,CAAC,CAAC;MAElC,MAAM;QAAEC,IAAI;QAAEZ;MAAM,CAAC,GAAG,MAAMV,QAAQ,CACnCuB,IAAI,CAAC,WAAW,CAAC,CACjBC,MAAM,CAAC,CAAC;QAAEC,IAAI,EAAEnB,YAAY;QAAEoB,QAAQ,EAAEN,QAAQ;QAAEO,OAAO,EAAEd,IAAI,CAACC;MAAG,CAAC,CAAC,CAAC;MAEzE,IAAIJ,KAAK,EAAE;QACTC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;MACzB,CAAC,MAAM;QACLC,KAAK,CAAC,8BAA8B,CAAC;MACvC;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVnB,QAAQ,CAAC,mBAAmB,CAAC;IAC/B;IAEAF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA;IAAK4B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC7B,OAAA;MAAA6B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjC,OAAA;MACEkC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAEjC,YAAa;MACpBkC,QAAQ,EAAGV,CAAC,IAAKvB,eAAe,CAACuB,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MACjDR,SAAS,EAAC;IAAgD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACFjC,OAAA;MAAQuC,OAAO,EAAEvB,kBAAmB;MAACwB,QAAQ,EAAEnC,OAAQ;MAACuB,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EACnGxB,OAAO,GAAG,WAAW,GAAG;IAAe;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACR1B,KAAK,iBAAIP,OAAA;MAAGyC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEtB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAnDID,YAAY;EAAA,QAIEH,SAAS;AAAA;AAAA6C,EAAA,GAJvB1C,YAAY;AAqDlB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}